12pm-batch


Dockerfile --> build --> Dockerimages --> run --> Dockercontainer


mkdir Sathish
vi Dockerfile


docker file -> set of instruction 

From ubuntu
maintainer Sathish
RUN apt update 
RUN apt install vim -y

ubuntu:001

From ubuntu:001
maintainer Sathish
RUN apt update 
RUN apt install git  -y
RUN apt install wget  -y


FROM httpd
COPY . /usr/local/apache2/htdocs/

FROM nginx
MAINTAINER sathish
WORKDIR /usr/share/nginx/html
COPY . .


FROM ubuntu
MAINTAINER sathish
RUN apt-get update && apt-get install -y apache2
RUN mkdir /var/run/apache2
ENV APACHE_RUN_user www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_RUN_DIR /var/run/apache2
EXPOSE 80
CMD ["/usr/sbin/apache2", "-D" , "FOREGROUND"]


#Download base image
FROM ubuntu:latest

#Install tzdata and set timezone.
#Update all packages run the 'apt update' command before installing any packages.
#we need to use -y flag otherwise it will ask for yes/no?
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata && apt-get install -y software-properties-common

#Install C/C++ 
RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test
#RUN apt install build-essential
RUN apt-get update -y
RUN apt-get install -y gcc
RUN apt-get install -y g++
RUN ln -f -s /usr/bin/gcc /usr/bin/gcc
RUN ln -f -s /usr/bin/g++ /usr/bin/g++

RUN apt-get update -y
RUN add-apt-repository ppa:ondrej/php

# Install apache, PHP, and supplimentary programs. openssh-server, curl, and lynx-cur are for debugging the container.
RUN apt-get update && apt-get -y upgrade && DEBIAN_FRONTEND=noninteractive apt-get -y install \
    apache2 php7.4 php7.4-mysql libapache2-mod-php7.4 curl lynx-common

# Enable apache mods.
RUN a2enmod php7.4
RUN a2enmod rewrite

#Remove any unnecessary files
RUN apt-get clean

#Setup Apache2 servers                                               
#Debian configuration requires the environment variables APACHE_RUN_USER, APACHE_RUN_GROUP, and APACHE_PID_FILE to be set
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_PID_FILE /var/run/apache2.pid
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2

#Expose ports
EXPOSE 80

#Change Permission
RUN chmod -R 777 /var/www/html/

#Copy files to webserver 
COPY editor /var/www/html/

# Remove Default index.html
RUN rm /var/www/html/index.html

#Start services
CMD ["/usr/sbin/apache2ctl","-D","FOREGROUND"]












